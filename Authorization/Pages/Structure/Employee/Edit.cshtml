@page
@using Authorization.Data
@model global::Authorization.Pages.Structure.Employee.EditModel
@{
}

<div class="row animated fadeInRightBig">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    Введите данные сотрудника
                </div>
                <div class="ibox-content">
                    <div class="sk-spinner sk-spinner-wave">
                        <div class="sk-rect1"></div>
                        <div class="sk-rect2"></div>
                        <div class="sk-rect3"></div>
                        <div class="sk-rect4"></div>
                        <div class="sk-rect5"></div>

                    </div>
                    <form id="edit-form" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Employee.Id">
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Имя<span style="color: red">*</span></label>
                            </div>
                            <div class="col-sm-10">
                                <input type="text" id="name" name="name" class="form-control" placeholder="Иванов" required="" value="@Model.Employee.Name">
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Фамилия<span style="color: red">*</span></label>
                            </div>
                            <div class="col-sm-10">
                                <input type="text" id="surname" name="surname" class="form-control" placeholder="Иван" required="" value="@Model.Employee.Surname">
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Отчество</label>
                            </div>
                            <div class="col-sm-10">
                                <input type="text" id="patronymic" name="patronymic" class="form-control" placeholder="Иванович" >
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Отдел<span style="color: red">*</span></label>
                            </div>
                            <div class="col-sm-10" id="department-select-box">
                                <select name="departmentId" id="department-select" class="form-control">
                                    @foreach (var department in Model.Departments)
                                    {
                                        if (department.Id == Model.Employee.Position.Department.Id)
                                        {
                                             <option selected="selected" value="@department.Id">@department.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@department.Id">@department.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Позиция<span style="color: red">*</span></label>
                            </div>
                            <div class="col-sm-10">

                                <select name="positionId" id="position-select" class="form-control">
                                    @foreach (var position in Model.Employee.Position.Department.Positions)
                                    {
                                        if (position.Id == Model.Employee.Position.Id)
                                        {
                                            <option selected="selected" value="@position.Id">@position.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@position.Id">@position.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2">
                                <label>Команда<span style="color: red">*</span></label>
                            </div>
                            <div class="col-sm-10">
                                <select name="teamId" id="team-select" class="form-control">
                                    @foreach (var team in Model.Employee.Team.Department.Teams)
                                    {
                                        if (team.Id == Model.Employee.Team.Id)
                                        {
                                            <option selected="selected" value="@team.Id">@team.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@team.Id">@team.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary block full-width m-b">Сохранить</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var form = $("#edit-form");
    form.on("submit",
        function (event) {
            $(".ibox-content").toggleClass('sk-loading');
            event.preventDefault();
            var data = form.serialize();
            var token = $('[name=__RequestVerificationToken]').val();
            $.ajax({
                url: "/Structure/Employee/Edit",
                type: 'POST',
                dataType: "json",
                data: { __RequestVerificationToken: token, jsonRequest: data },
                success: function (response) {
                    switch (response.code) {
                    case 200:
                            
                        break;
                    default:
                        break;
                    }
                }
            }).always(function() {
                $(".ibox-content").toggleClass('sk-loading');
            });
        });
    





    /**
     *
    VISUAL ASSETS
     *
     */
    function readURL(input) {
        if (input.files && input.files[0]) {
            $('#preview-image').show();
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#preview-image').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
        else {
            $('#preview-image').hide();
        }
    }
    $("#input-avatar").on("change", function (e) {
        readURL(this);
    });

    $("#department-select").on("change", function (e) {
        $(".ibox-content").toggleClass('sk-loading');
        $("#position-select").empty();
        $("#team-select").empty();
        var id = $("#department-select").val();
        var token = $('[name=__RequestVerificationToken]').val();
        $.ajax({
            url: "/Structure/Teams?handler=Json",
            type: 'GET',
            dataType: "json",
            data: { __RequestVerificationToken: token, departmentId: id },
            success: function (response) {
                $(".ibox-content").toggleClass('sk-loading');
                switch (response.code) {
                    case "200":
                        if (response.teams != null && response.teams.length != 0) {
                            for (var i = 0; i < response.teams.length; i++) {
                                $('#team-select')
                                    .append($("<option></option>")
                                        .attr("value", response.teams[i].id)
                                        .text(response.teams[i].name));
                            }
                        }
                        break;
                    default:
                        break;
                }
            }
        });
        $.ajax({
            url: "/Structure/Grades?handler=Json",
            type: 'GET',
            dataType: "json",
            data: { __RequestVerificationToken: token, departmentId: id },
            success: function (response) {
                switch (response.code) {
                    case "200":
                        if (response.positions != null && response.positions.length != 0) {
                                for (var i = 0; i < response.positions.length; i++) {
                                $('#position-select')
                                    .append($("<option></option>")
                                        .attr("value", response.positions[i].id)
                                        .text(response.positions[i].name));
                            }
                        }
                        break;
                    default:
                        break;
                }
            }
        });

    });
</script>